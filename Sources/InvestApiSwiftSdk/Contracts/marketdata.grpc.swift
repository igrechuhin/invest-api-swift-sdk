//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: marketdata.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


///Сервис для получения биржевой информации:<br/> 1. Свечи.<br/> 2. Стаканы.<br/> 3. Торговые статусы.<br/> 4. Лента сделок.
///
/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? { get }

  func getCandles(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse>

  func getLastPrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse>

  func getOrderBook(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse>

  func getTradingStatus(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse>

  func getTradingStatuses(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse>

  func getLastTrades(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse>

  func getClosePrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse>

  func getTechAnalysis(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.MarketDataService"
  }

  ///Запросить исторические свечи по инструменту.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCandles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCandles(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getCandles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCandlesInterceptors() ?? []
    )
  }

  ///Запросить цены последних сделок по инструментам.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLastPrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLastPrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastPricesInterceptors() ?? []
    )
  }

  ///Получить стакан по инструменту.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOrderBook.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOrderBook(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getOrderBook.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrderBookInterceptors() ?? []
    )
  }

  ///Запросить статус торгов по инструментам.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTradingStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTradingStatus(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusInterceptors() ?? []
    )
  }

  ///Запросить статус торгов по инструментам.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTradingStatuses.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTradingStatuses(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatuses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusesInterceptors() ?? []
    )
  }

  ///Запросить обезличенные сделки за последний час.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLastTrades.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLastTrades(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastTrades.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastTradesInterceptors() ?? []
    )
  }

  ///Запросить цены закрытия торговой сессии по инструментам.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetClosePrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getClosePrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getClosePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClosePricesInterceptors() ?? []
    )
  }

  ///Получить технические индикаторы по инструменту.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTechAnalysis.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTechAnalysis(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTechAnalysis.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTechAnalysisInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceNIOClient")
public final class Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.MarketDataService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceNIOClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.MarketDataService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

///Сервис для получения биржевой информации:<br/> 1. Свечи.<br/> 2. Стаканы.<br/> 3. Торговые статусы.<br/> 4. Лента сделок.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? { get }

  func makeGetCandlesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse>

  func makeGetLastPricesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse>

  func makeGetOrderBookCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse>

  func makeGetTradingStatusCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse>

  func makeGetTradingStatusesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse>

  func makeGetLastTradesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse>

  func makeGetClosePricesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse>

  func makeGetTechAnalysisCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetCandlesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getCandles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCandlesInterceptors() ?? []
    )
  }

  public func makeGetLastPricesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastPricesInterceptors() ?? []
    )
  }

  public func makeGetOrderBookCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getOrderBook.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrderBookInterceptors() ?? []
    )
  }

  public func makeGetTradingStatusCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusInterceptors() ?? []
    )
  }

  public func makeGetTradingStatusesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatuses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusesInterceptors() ?? []
    )
  }

  public func makeGetLastTradesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastTrades.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastTradesInterceptors() ?? []
    )
  }

  public func makeGetClosePricesCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getClosePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClosePricesInterceptors() ?? []
    )
  }

  public func makeGetTechAnalysisCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTechAnalysis.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTechAnalysisInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceAsyncClientProtocol {
  public func getCandles(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getCandles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCandlesInterceptors() ?? []
    )
  }

  public func getLastPrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastPricesInterceptors() ?? []
    )
  }

  public func getOrderBook(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getOrderBook.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrderBookInterceptors() ?? []
    )
  }

  public func getTradingStatus(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusInterceptors() ?? []
    )
  }

  public func getTradingStatuses(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatuses.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTradingStatusesInterceptors() ?? []
    )
  }

  public func getLastTrades(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastTrades.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLastTradesInterceptors() ?? []
    )
  }

  public func getClosePrices(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getClosePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetClosePricesInterceptors() ?? []
    )
  }

  public func getTechAnalysis(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTechAnalysis.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTechAnalysisInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceAsyncClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getCandles'.
  func makeGetCandlesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetCandlesResponse>]

  /// - Returns: Interceptors to use when invoking 'getLastPrices'.
  func makeGetLastPricesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastPricesResponse>]

  /// - Returns: Interceptors to use when invoking 'getOrderBook'.
  func makeGetOrderBookInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOrderBookResponse>]

  /// - Returns: Interceptors to use when invoking 'getTradingStatus'.
  func makeGetTradingStatusInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusResponse>]

  /// - Returns: Interceptors to use when invoking 'getTradingStatuses'.
  func makeGetTradingStatusesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTradingStatusesResponse>]

  /// - Returns: Interceptors to use when invoking 'getLastTrades'.
  func makeGetLastTradesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetLastTradesResponse>]

  /// - Returns: Interceptors to use when invoking 'getClosePrices'.
  func makeGetClosePricesInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetClosePricesResponse>]

  /// - Returns: Interceptors to use when invoking 'getTechAnalysis'.
  func makeGetTechAnalysisInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetTechAnalysisResponse>]
}

public enum Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MarketDataService",
    fullName: "tinkoff.public.invest.api.contract.v1.MarketDataService",
    methods: [
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getCandles,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastPrices,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getOrderBook,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatus,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTradingStatuses,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getLastTrades,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getClosePrices,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServiceClientMetadata.Methods.getTechAnalysis,
    ]
  )

  public enum Methods {
    public static let getCandles = GRPCMethodDescriptor(
      name: "GetCandles",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetCandles",
      type: GRPCCallType.unary
    )

    public static let getLastPrices = GRPCMethodDescriptor(
      name: "GetLastPrices",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetLastPrices",
      type: GRPCCallType.unary
    )

    public static let getOrderBook = GRPCMethodDescriptor(
      name: "GetOrderBook",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetOrderBook",
      type: GRPCCallType.unary
    )

    public static let getTradingStatus = GRPCMethodDescriptor(
      name: "GetTradingStatus",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetTradingStatus",
      type: GRPCCallType.unary
    )

    public static let getTradingStatuses = GRPCMethodDescriptor(
      name: "GetTradingStatuses",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetTradingStatuses",
      type: GRPCCallType.unary
    )

    public static let getLastTrades = GRPCMethodDescriptor(
      name: "GetLastTrades",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetLastTrades",
      type: GRPCCallType.unary
    )

    public static let getClosePrices = GRPCMethodDescriptor(
      name: "GetClosePrices",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetClosePrices",
      type: GRPCCallType.unary
    )

    public static let getTechAnalysis = GRPCMethodDescriptor(
      name: "GetTechAnalysis",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataService/GetTechAnalysis",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? { get }

  func marketDataStream(
    callOptions: CallOptions?,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse) -> Void
  ) -> BidirectionalStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>

  func marketDataServerSideStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest,
    callOptions: CallOptions?,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.MarketDataStreamService"
  }

  ///Bidirectional-стрим предоставления биржевой информации.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  public func marketDataStream(
    callOptions: CallOptions? = nil,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse) -> Void
  ) -> BidirectionalStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataStreamInterceptors() ?? [],
      handler: handler
    )
  }

  ///Server-side стрим предоставления биржевой информации.
  ///
  /// - Parameters:
  ///   - request: Request to send to MarketDataServerSideStream.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func marketDataServerSideStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> {
    return self.makeServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataServerSideStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataServerSideStreamInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceNIOClient")
public final class Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.MarketDataStreamService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceNIOClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.MarketDataStreamService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? { get }

  func makeMarketDataStreamCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>

  func makeMarketDataServerSideStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeMarketDataStreamCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataStream.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataStreamInterceptors() ?? []
    )
  }

  public func makeMarketDataServerSideStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataServerSideStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataServerSideStreamInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceAsyncClientProtocol {
  public func marketDataStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> where RequestStream: Sequence, RequestStream.Element == Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataStreamInterceptors() ?? []
    )
  }

  public func marketDataStream<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataStream.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataStreamInterceptors() ?? []
    )
  }

  public func marketDataServerSideStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse> {
    return self.performAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataServerSideStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMarketDataServerSideStreamInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceAsyncClient: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'marketDataStream'.
  func makeMarketDataStreamInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>]

  /// - Returns: Interceptors to use when invoking 'marketDataServerSideStream'.
  func makeMarketDataServerSideStreamInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_MarketDataServerSideStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_MarketDataResponse>]
}

public enum Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MarketDataStreamService",
    fullName: "tinkoff.public.invest.api.contract.v1.MarketDataStreamService",
    methods: [
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataStream,
      Tinkoff_Public_Invest_Api_Contract_V1_MarketDataStreamServiceClientMetadata.Methods.marketDataServerSideStream,
    ]
  )

  public enum Methods {
    public static let marketDataStream = GRPCMethodDescriptor(
      name: "MarketDataStream",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataStreamService/MarketDataStream",
      type: GRPCCallType.bidirectionalStreaming
    )

    public static let marketDataServerSideStream = GRPCMethodDescriptor(
      name: "MarketDataServerSideStream",
      path: "/tinkoff.public.invest.api.contract.v1.MarketDataStreamService/MarketDataServerSideStream",
      type: GRPCCallType.serverStreaming
    )
  }
}

