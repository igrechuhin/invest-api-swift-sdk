//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: operations.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


///С помощью методов сервиса можно получить:<br/><br/> **1**. Список операций по счету.<br/> **2**.
///Портфель по счету.<br/> **3**. Позиции ценных бумаг на счете.<br/> **4**.
///Доступный остаток для вывода средств.<br/> **5**. Различные отчеты.
///
/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? { get }

  func getOperations(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>

  func getPortfolio(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>

  func getPositions(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>

  func getWithdrawLimits(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest, Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse>

  func getBrokerReport(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest, Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse>

  func getDividendsForeignIssuer(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse>

  func getOperationsByCursor(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.OperationsService"
  }

  ///Получить список операций по счету.
  ///При работе с методом учитывайте [особенности взаимодействия](/invest/services/operations/operations_problems).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOperations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOperations(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsInterceptors() ?? []
    )
  }

  ///Получить портфель по счету.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPortfolio.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPortfolio(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPortfolio.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPortfolioInterceptors() ?? []
    )
  }

  ///Получить список позиций по счету.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPositions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPositions(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPositions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPositionsInterceptors() ?? []
    )
  }

  ///Получить доступный остаток для вывода средств.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWithdrawLimits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getWithdrawLimits(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest, Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getWithdrawLimits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWithdrawLimitsInterceptors() ?? []
    )
  }

  ///Получить брокерский отчет.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBrokerReport.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBrokerReport(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest, Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getBrokerReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBrokerReportInterceptors() ?? []
    )
  }

  ///Получить отчет «Справка о доходах за пределами РФ».
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDividendsForeignIssuer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDividendsForeignIssuer(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getDividendsForeignIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDividendsForeignIssuerInterceptors() ?? []
    )
  }

  ///Получить список операций по счету с пагинацией.
  ///При работе с методом учитывайте [особенности взаимодействия](/invest/services/operations/operations_problems).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOperationsByCursor.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOperationsByCursor(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse> {
    return self.makeUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperationsByCursor.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsByCursorInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceNIOClient")
public final class Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.OperationsService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceNIOClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.OperationsService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

///С помощью методов сервиса можно получить:<br/><br/> **1**. Список операций по счету.<br/> **2**.
///Портфель по счету.<br/> **3**. Позиции ценных бумаг на счете.<br/> **4**.
///Доступный остаток для вывода средств.<br/> **5**. Различные отчеты.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? { get }

  func makeGetOperationsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>

  func makeGetPortfolioCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>

  func makeGetPositionsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>

  func makeGetWithdrawLimitsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest, Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse>

  func makeGetBrokerReportCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest, Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse>

  func makeGetDividendsForeignIssuerCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse>

  func makeGetOperationsByCursorCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetOperationsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsInterceptors() ?? []
    )
  }

  public func makeGetPortfolioCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPortfolio.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPortfolioInterceptors() ?? []
    )
  }

  public func makeGetPositionsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPositions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPositionsInterceptors() ?? []
    )
  }

  public func makeGetWithdrawLimitsCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest, Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getWithdrawLimits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWithdrawLimitsInterceptors() ?? []
    )
  }

  public func makeGetBrokerReportCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest, Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getBrokerReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBrokerReportInterceptors() ?? []
    )
  }

  public func makeGetDividendsForeignIssuerCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getDividendsForeignIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDividendsForeignIssuerInterceptors() ?? []
    )
  }

  public func makeGetOperationsByCursorCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse> {
    return self.makeAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperationsByCursor.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsByCursorInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceAsyncClientProtocol {
  public func getOperations(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsInterceptors() ?? []
    )
  }

  public func getPortfolio(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPortfolio.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPortfolioInterceptors() ?? []
    )
  }

  public func getPositions(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPositions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPositionsInterceptors() ?? []
    )
  }

  public func getWithdrawLimits(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getWithdrawLimits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWithdrawLimitsInterceptors() ?? []
    )
  }

  public func getBrokerReport(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getBrokerReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBrokerReportInterceptors() ?? []
    )
  }

  public func getDividendsForeignIssuer(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getDividendsForeignIssuer.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDividendsForeignIssuerInterceptors() ?? []
    )
  }

  public func getOperationsByCursor(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse {
    return try await self.performAsyncUnaryCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperationsByCursor.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOperationsByCursorInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceAsyncClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getOperations'.
  func makeGetOperationsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_OperationsRequest, Tinkoff_Public_Invest_Api_Contract_V1_OperationsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPortfolio'.
  func makeGetPortfolioInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioResponse>]

  /// - Returns: Interceptors to use when invoking 'getPositions'.
  func makeGetPositionsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PositionsRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsResponse>]

  /// - Returns: Interceptors to use when invoking 'getWithdrawLimits'.
  func makeGetWithdrawLimitsInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsRequest, Tinkoff_Public_Invest_Api_Contract_V1_WithdrawLimitsResponse>]

  /// - Returns: Interceptors to use when invoking 'getBrokerReport'.
  func makeGetBrokerReportInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportRequest, Tinkoff_Public_Invest_Api_Contract_V1_BrokerReportResponse>]

  /// - Returns: Interceptors to use when invoking 'getDividendsForeignIssuer'.
  func makeGetDividendsForeignIssuerInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetDividendsForeignIssuerResponse>]

  /// - Returns: Interceptors to use when invoking 'getOperationsByCursor'.
  func makeGetOperationsByCursorInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorRequest, Tinkoff_Public_Invest_Api_Contract_V1_GetOperationsByCursorResponse>]
}

public enum Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "OperationsService",
    fullName: "tinkoff.public.invest.api.contract.v1.OperationsService",
    methods: [
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperations,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPortfolio,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getPositions,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getWithdrawLimits,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getBrokerReport,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getDividendsForeignIssuer,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsServiceClientMetadata.Methods.getOperationsByCursor,
    ]
  )

  public enum Methods {
    public static let getOperations = GRPCMethodDescriptor(
      name: "GetOperations",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetOperations",
      type: GRPCCallType.unary
    )

    public static let getPortfolio = GRPCMethodDescriptor(
      name: "GetPortfolio",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetPortfolio",
      type: GRPCCallType.unary
    )

    public static let getPositions = GRPCMethodDescriptor(
      name: "GetPositions",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetPositions",
      type: GRPCCallType.unary
    )

    public static let getWithdrawLimits = GRPCMethodDescriptor(
      name: "GetWithdrawLimits",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetWithdrawLimits",
      type: GRPCCallType.unary
    )

    public static let getBrokerReport = GRPCMethodDescriptor(
      name: "GetBrokerReport",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetBrokerReport",
      type: GRPCCallType.unary
    )

    public static let getDividendsForeignIssuer = GRPCMethodDescriptor(
      name: "GetDividendsForeignIssuer",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetDividendsForeignIssuer",
      type: GRPCCallType.unary
    )

    public static let getOperationsByCursor = GRPCMethodDescriptor(
      name: "GetOperationsByCursor",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsService/GetOperationsByCursor",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClient`, then call methods of this protocol to make API calls.
public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? { get }

  func portfolioStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest,
    callOptions: CallOptions?,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse>

  func positionsStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest,
    callOptions: CallOptions?,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse>
}

extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientProtocol {
  public var serviceName: String {
    return "tinkoff.public.invest.api.contract.v1.OperationsStreamService"
  }

  ///Server-side stream обновлений портфеля.
  ///
  /// - Parameters:
  ///   - request: Request to send to PortfolioStream.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func portfolioStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse> {
    return self.makeServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.portfolioStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePortfolioStreamInterceptors() ?? [],
      handler: handler
    )
  }

  ///Server-side stream обновлений информации по изменению позиций портфеля.
  ///
  /// - Parameters:
  ///   - request: Request to send to PositionsStream.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func positionsStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse) -> Void
  ) -> ServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse> {
    return self.makeServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.positionsStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePositionsStreamInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceNIOClient")
public final class Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.OperationsStreamService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceNIOClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the tinkoff.public.invest.api.contract.v1.OperationsStreamService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? { get }

  func makePortfolioStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse>

  func makePositionsStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makePortfolioStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.portfolioStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePortfolioStreamInterceptors() ?? []
    )
  }

  public func makePositionsStreamCall(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.positionsStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePositionsStreamInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceAsyncClientProtocol {
  public func portfolioStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse> {
    return self.performAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.portfolioStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePortfolioStreamInterceptors() ?? []
    )
  }

  public func positionsStream(
    _ request: Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse> {
    return self.performAsyncServerStreamingCall(
      path: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.positionsStream.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePositionsStreamInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceAsyncClient: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'portfolioStream'.
  func makePortfolioStreamInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PortfolioStreamResponse>]

  /// - Returns: Interceptors to use when invoking 'positionsStream'.
  func makePositionsStreamInterceptors() -> [ClientInterceptor<Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamRequest, Tinkoff_Public_Invest_Api_Contract_V1_PositionsStreamResponse>]
}

public enum Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "OperationsStreamService",
    fullName: "tinkoff.public.invest.api.contract.v1.OperationsStreamService",
    methods: [
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.portfolioStream,
      Tinkoff_Public_Invest_Api_Contract_V1_OperationsStreamServiceClientMetadata.Methods.positionsStream,
    ]
  )

  public enum Methods {
    public static let portfolioStream = GRPCMethodDescriptor(
      name: "PortfolioStream",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsStreamService/PortfolioStream",
      type: GRPCCallType.serverStreaming
    )

    public static let positionsStream = GRPCMethodDescriptor(
      name: "PositionsStream",
      path: "/tinkoff.public.invest.api.contract.v1.OperationsStreamService/PositionsStream",
      type: GRPCCallType.serverStreaming
    )
  }
}

